async-context	lua-async.txt	/*async-context*
async-error-handling	lua-async.txt	/*async-error-handling*
async-function	lua-async.txt	/*async-function*
async-task-ownership	lua-async.txt	/*async-task-ownership*
vim.async	lua-async.txt	/*vim.async*
vim.async.Cancelled	lua-async.txt	/*vim.async.Cancelled*
vim.async.Closable	lua-async.txt	/*vim.async.Closable*
vim.async.Closable.close	lua-async.txt	/*vim.async.Closable.close*
vim.async.Event	lua-async.txt	/*vim.async.Event*
vim.async.Event:clear()	lua-async.txt	/*vim.async.Event:clear()*
vim.async.Event:set()	lua-async.txt	/*vim.async.Event:set()*
vim.async.Event:wait()	lua-async.txt	/*vim.async.Event:wait()*
vim.async.Future	lua-async.txt	/*vim.async.Future*
vim.async.Future:complete()	lua-async.txt	/*vim.async.Future:complete()*
vim.async.Future:completed()	lua-async.txt	/*vim.async.Future:completed()*
vim.async.Future:result()	lua-async.txt	/*vim.async.Future:result()*
vim.async.Future:wait()	lua-async.txt	/*vim.async.Future:wait()*
vim.async.Queue	lua-async.txt	/*vim.async.Queue*
vim.async.Queue:get()	lua-async.txt	/*vim.async.Queue:get()*
vim.async.Queue:get_nowait()	lua-async.txt	/*vim.async.Queue:get_nowait()*
vim.async.Queue:max_size()	lua-async.txt	/*vim.async.Queue:max_size()*
vim.async.Queue:put()	lua-async.txt	/*vim.async.Queue:put()*
vim.async.Queue:put_nowait()	lua-async.txt	/*vim.async.Queue:put_nowait()*
vim.async.Queue:size()	lua-async.txt	/*vim.async.Queue:size()*
vim.async.Semaphore	lua-async.txt	/*vim.async.Semaphore*
vim.async.Semaphore:acquire()	lua-async.txt	/*vim.async.Semaphore:acquire()*
vim.async.Semaphore:release()	lua-async.txt	/*vim.async.Semaphore:release()*
vim.async.Semaphore:with()	lua-async.txt	/*vim.async.Semaphore:with()*
vim.async.Task	lua-async.txt	/*vim.async.Task*
vim.async.Task:cancelled()	lua-async.txt	/*vim.async.Task:cancelled()*
vim.async.Task:close()	lua-async.txt	/*vim.async.Task:close()*
vim.async.Task:completed()	lua-async.txt	/*vim.async.Task:completed()*
vim.async.Task:detach()	lua-async.txt	/*vim.async.Task:detach()*
vim.async.Task:pwait()	lua-async.txt	/*vim.async.Task:pwait()*
vim.async.Task:raise_on_error()	lua-async.txt	/*vim.async.Task:raise_on_error()*
vim.async.Task:status()	lua-async.txt	/*vim.async.Task:status()*
vim.async.Task:traceback()	lua-async.txt	/*vim.async.Task:traceback()*
vim.async.Task:wait()	lua-async.txt	/*vim.async.Task:wait()*
vim.async.await()	lua-async.txt	/*vim.async.await()*
vim.async.event()	lua-async.txt	/*vim.async.event()*
vim.async.future()	lua-async.txt	/*vim.async.future()*
vim.async.is_cancelled()	lua-async.txt	/*vim.async.is_cancelled()*
vim.async.iter()	lua-async.txt	/*vim.async.iter()*
vim.async.join()	lua-async.txt	/*vim.async.join()*
vim.async.joinany()	lua-async.txt	/*vim.async.joinany()*
vim.async.queue()	lua-async.txt	/*vim.async.queue()*
vim.async.run()	lua-async.txt	/*vim.async.run()*
vim.async.semaphore()	lua-async.txt	/*vim.async.semaphore()*
vim.async.sleep()	lua-async.txt	/*vim.async.sleep()*
vim.async.timeout()	lua-async.txt	/*vim.async.timeout()*
vim.async.wrap()	lua-async.txt	/*vim.async.wrap()*
